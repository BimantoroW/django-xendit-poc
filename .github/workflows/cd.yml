name: Deploy Django App

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Chekout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.IMAGE_NAME }}:latest .
    
      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.IMAGE_NAME }}:latest


  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Chekout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set environment variables
        run: |
          cat << EOF > .env
            PRODUCTION=${{ secrets.PRODUCTION }}
            PORT=${{ secrets.PORT }}
            DATABASE=${{ secrets.DATABASE }}

            DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}
            DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }}
            DJANGO_CSRF_TRUSTED_ORIGINS=${{ secrets.DJANGO_CSRF_TRUSTED_ORIGINS }}
            DJANGO_SQL_ENGINE=${{ secrets.DJANGO_SQL_ENGINE }}
            DJANGO_SQL_DATABASE=${{ secrets.DJANGO_SQL_DATABASE }}
            DJANGO_SQL_USER=${{ secrets.DJANGO_SQL_USER }}
            DJANGO_SQL_PASSWORD=${{ secrtes.DJANGO_SQL_PASSWORD }}
            DJANGO_SQL_HOST=${{ secrets.DJANGO_SQL_HOST }}
            DJANGO_SQL_PORT=${{ secrets.DJANGO_SQL_PORT }}

            XENDIT_API_GATEWAY_URL=${{ secrets.XENDIT_API_GATEWAY_URL }}
            XENDIT_API_KEY=${{ secrets.XENDIT_API_KEY }}
            XENDIT_WEBHOOK_VERIFICATION_TOKEN=${{ secrets.XENDIT_WEBHOOK_VERIFICATION_TOKEN }}

            POSTGRES_DB=${{ secrets.DJANGO_SQL_DATABASE }}
            POSTGRES_USER=${{ secrets.DJANGO_SQL_USER }}
            POSTGRES_PASSWORD=${{ secerts.DJANGO_SQL_PASSWORD }}
          EOF
      
      - name: Set up ssh key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.REMOTE_SERVER }} >> ~/.ssh/known_hosts
        
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          pip install paramiko
    
      - name: Deploy
        run: |
          export DOCKER_HOST=ssh://${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_SERVER }}
          docker info
          docker-compose -f docker-compose.yml -f docker-compose.prod.yml down
          docker system prune -af
          docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d